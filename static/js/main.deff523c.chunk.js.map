{"version":3,"sources":["images/beach.jpg","images/clouds.jpg","images/forest3.jpg","images/temple.jpg","images/sand.jpg","timer.js","audioSelector.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Timer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","selection","started","currentTime","clearInterval","interval","setState","togglePlay","startTimer","duration","display","minutes","seconds","context","timer","setInterval","parseInt","start","n","_this2","react_default","a","createElement","className","onClick","toggleSelect","React","Component","AudioSelector","play","birds","Audio","volume","rain","ocean","prayer","loop","bind","assertThisInitialized","choice","e","changeBg","pause","_this3","Fragment","style","color","toggleSelection","App","imageUrl","beach","temple","mute","backgroundImage","concat","audioSelector","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.deff523c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/beach.3c1f74af.jpg\";","module.exports = __webpack_public_path__ + \"static/media/clouds.893e7dcb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/forest3.79815029.jpg\";","module.exports = __webpack_public_path__ + \"static/media/temple.88f37b36.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sand.ceadf832.jpg\";","import React from 'react';  \n\nclass Timer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            selection: 3,\n            started: false,\n            currentTime: \"\"\n        };\n\n\n    }\n\n    start(){\n        if(this.state.started){\n            clearInterval(this.state.interval);\n            this.setState({started: false});\n            this.props.togglePlay();\n        }else{\n            let currentTime = this.state.selection + \":00\";\n            this.setState({ started: true, currentTime: currentTime });\n            this.startTimer(this.state.selection * 60);\n            this.props.togglePlay();\n        }\n    }\n\n    startTimer(duration, display) {\n    let context = this;\n    let timer = duration, minutes, seconds;\n    let interval = setInterval(function () {\n        minutes = parseInt(timer / 60, 10);\n        seconds = parseInt(timer % 60, 10);\n\n        // minutes = minutes < 10 ? \"0\" + minutes : minutes;\n        seconds = seconds < 10 ? \"0\" + seconds : seconds;\n\n        context.setState({ currentTime: minutes + \":\" + seconds});\n\n        if (--timer < 0) {\n            clearInterval(context.state.interval);\n            context.start();\n        }\n    }, 1000);\n    this.setState({interval: interval});\n}\n\n\n    toggleSelect(n){\n        this.setState({selection: n});\n\n    }\n\n    render() {\n        if(!this.state.started){\n            return (\n                <div className=\"timer\">\n                    <div onClick={()=>this.toggleSelect(2)} \n                    className={this.state.selection === 2 ? \"selectedTimer\" : \"\"}>2:00</div>\n                    <div onClick={() => this.toggleSelect(3)} \n                    className={this.state.selection === 3 ? \"selectedTimer\" : \"\"}>3:00</div>\n                    <div onClick={() => this.toggleSelect(5)} \n                    className={this.state.selection === 5 ? \"selectedTimer\" : \"\"}>5:00</div>\n                    <br />\n                    <button onClick={()=>this.start()}> Begin </button>\n                </div>\n            )\n        }else{\n            return(\n            <div className=\"timer\">\n\n                <div>\n                    \n                    {this.state.currentTime}\n                </div>\n\n                <p>\n                        Let go of the mouse and keyboard and just relax for a few minutes.\n                </p>\n                \n                <br />\n                    <button onClick={() => this.start()}> Pause </button>\n            </div>\n            )\n        }\n    }\n}\n\nexport default Timer","import React from 'react';\nimport Timer from './timer';\n\nclass AudioSelector extends React.Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            play: false,\n            selection: \"ocean\"\n        };\n\n        this.birds = new Audio('./audio/birds.mp3');\n        this.birds.volume = \"0.8\";\n        this.rain = new Audio('./audio/rain.ogg');\n        this.ocean = new Audio('./audio/ocean.wav');\n        this.prayer = new Audio('./audio/prayer.mp3');\n        this.birds.loop = true;\n        this.rain.loop = true;\n        this.ocean.loop = true;\n        this.prayer.loop = true;\n\n\n\n        this.togglePlay = this.togglePlay.bind(this);\n\n    }\n\n    toggleSelection(choice, e){\n        this.props.changeBg(choice);\n        if(!this.state.play) {\n            this.setState({selection: choice});\n        }else{\n            this.togglePlay();\n            this.setState({selection: choice}, () => this.togglePlay()\n            );\n        }\n    }\n\n    togglePlay(){\n        if(this.state.play){\n            if(this.state.selection){\n                this[this.state.selection].pause();\n            }\n            this.setState({play: false});\n        }else{\n            if(this.state.selection){\n                this[this.state.selection].play();\n            }\n            this.setState({play: true});\n        }\n    }\n\n    render(){\n        return(\n        <>\n        <div className = \"audioSelector\">\n            <div style={{color: \"red\"}}className={this.state.selection === null ? \"selected\" : \"unselected\"} onClick={(e) => this.toggleSelection(null, e)} > Mute </div>\n            <div className={this.state.selection === \"rain\" ? \"selected\" : \"unselected\"} onClick={(e) => this.toggleSelection(\"rain\", e)} > Rain </div>\n            <div className={this.state.selection === \"ocean\" ? \"selected\" : \"unselected\"} onClick={(e) => this.toggleSelection(\"ocean\", e)} > Ocean </div>\n            <div className={this.state.selection === \"birds\" ? \"selected\" : \"unselected\"} onClick={(e) => this.toggleSelection(\"birds\", e)} > Birds </div>\n            <div className={this.state.selection === \"prayer\" ? \"selected\" : \"unselected\"} onClick={(e) => this.toggleSelection(\"prayer\", e)} > Gongs </div>\n\n            </div>\n\n            <Timer togglePlay={this.togglePlay}/>\n\n            {/* <button onClick={this.togglePlay}>{this.state.play ? \"pause\" : \"play\"} </button> */}\n        </>\n        )\n    }\n}\n\nexport default AudioSelector;","import React from 'react';\nimport './App.css';\nimport beach from './images/beach.jpg';\nimport rain from './images/clouds.jpg';\nimport birds from './images/forest3.jpg';\nimport temple from './images/temple.jpg';\nimport mute from './images/sand.jpg';\nimport AudioSelector from './audioSelector';\n\n\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {imageUrl: beach};\n\n    this.changeBg = this.changeBg.bind(this);\n  }\n\n  changeBg(selection){\n    switch(selection){\n      case \"ocean\":\n        this.setState({imageUrl: beach});\n        break;\n      case \"rain\":\n        this.setState({ imageUrl: rain });\n        break;\n      case \"birds\":\n        this.setState({ imageUrl: birds });\n        break;\n      case \"prayer\":\n        this.setState({ imageUrl: temple });\n        break;\n      case null:\n        this.setState({ imageUrl: mute });\n        break;\n\n\n    }\n  };\n\n  render(){\n  return(\n    <div className=\"App\" style={{ backgroundImage: `url(${this.state.imageUrl})`}}>\n      <h1>Meditate</h1>\n      <p> Meditation has many clinically demonstrated health benefits and can be done right at your desk. </p>\n\n\n        <AudioSelector changeBg={this.changeBg} />\n    </div>\n  )};\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}